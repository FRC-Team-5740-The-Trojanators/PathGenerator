/*
 * This file was generated by the Gradle 'init' task.
 *
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/tutorial_java_projects.html
 */


plugins 
{
    // Apply the java plugin to add support for Java
    id 'base'
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url 'https://jitpack.io' }
 
}

dependencies {

    implementation "org.apache.commons:commons-csv:1.5"
    implementation 'com.jfoenix:jfoenix:9.0.10'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.springframework.boot:spring-boot-starter-test') 

    implementation 'org.controlsfx:controlsfx:11.0.1'
    implementation group: 'com.googlecode.charts4j', name: 'charts4j', version: '1.3'
    implementation group: 'org.webjars', name: 'bootstrap', version: '4.0.0-2'
    implementation group: 'com.amihaiemil.web', name: 'eo-yaml', version: '5.1.6'
    implementation  group: 'tech.units', name: 'indriya', version: '2.0.2'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation 'me.carleslc.Simple-YAML:Simple-Yaml:1.7.1'

    // Test stuff



    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    // testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    // testImplementation 'junit:junit:4.13'



    testRuntime 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    // testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    // testRuntime 'junit:junit:4.13'
    // // implementation(localGroovy())
    // // testImplementation(platform('org.junit:junit-bom:5.7.0'))
    // // testImplementation('org.junit.jupiter:junit-jupiter')
    // // testImplementation("junit:junit:4.13.1")
    // // testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.7.0")

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testCompile 'org.testfx:testfx-core:4.0.16-alpha'
    testCompile 'org.testfx:testfx-junit:4.0.16-alpha'

    testCompile group: 'org.hamcrest', name: 'hamcrest', version: '2.1'
    
}
ext.excludeTests = '**test/java/UserInterface/PathGeneration.class'


javafx {
    version = '11'
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

application {
    // Define the main class for the application.
    mainClassName = 'pathgenerator.Main'
}


task genJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'pathgenerator.Main'
    }
    baseName = 'PathGenerator'
    from { 
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } 
        }
    with jar
}

ext{
    excludeTests ='**test/UserInterface/MainPage.class'
}

test {
        useJUnitPlatform()
        testLogging {
            showStandardStreams = true
        }
}



